version: '3.9'
services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - bbs-net
      
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "admin123"]
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      TZ: Asia/Shanghai
    networks:
      - bbs-net
      
  nacos:
    image: nacos/nacos-server:v2.1.2
    container_name: nacos
    env_file:
      - ./nacos/custom.env
    depends_on:
      - mysql
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    networks:
      - bbs-net

#  sentinel:
#    image: bladex/sentinel-dashboard:1.8.6
#    container_name: sentinel
#    environment:
#      TZ: Asia/Shanghai
#    ports:
#      - "8858:8858"
#    networks:
#      - bbs-net
  sentinel:
    image: openjdk:17
    container_name: sentinel-dashboard
    volumes:
      - ./sentinel-dashboard.jar:/app/sentinel-dashboard.jar
    working_dir: /app
    command: >
      java
      -Dserver.port=8090
      -Dcsp.sentinel.dashboard.server=localhost:8090
      -Dproject.name=sentinel-dashboard
      -jar sentinel-dashboard.jar
    ports:
      - "8090:8090"
    networks:
      - bbs-net
      
  seata-server:
    image: seataio/seata-server:1.7.1
    container_name: seata-server
    ports:
      - "7099:7099"
      - "8099:8099"
    environment:
      SEATA_IP: 192.168.3.16
    volumes:
      - ./seata:/seata-server/resources
    privileged: true
    depends_on:
      - mysql
      - nacos
    networks:
      - bbs-net

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - es-plugins:/usr/share/elasticsearch/plugins
    networks:
      - bbs-net

#  elasticsearch:
#    image: elasticsearch:8.11.3
#    container_name: elasticsearch
#    environment:
#      - discovery.type=single-node
#      - xpack.security.enabled=true
#      - xpack.security.http.ssl.enabled=true
#      - xpack.security.transport.ssl.enabled=true
#      - ELASTIC_PASSWORD=admin123
#      - xpack.security.authc.api_key.enabled=true
#      - ES_JAVA_OPTS=-Xms512m -Xmx512m
#    ports:
#      - "9200:9200"
#      - "9300:9300"
#    volumes:
#      - es-data:/usr/share/elasticsearch/data
#      - es-plugins:/usr/share/elasticsearch/plugins
#    networks:
#      - bbs-net
# sudo docker exec -it elasticsearch ./bin/elasticsearch-plugin  install https://get.infini.cloud/elasticsearch/analysis-ik/8.11.3

#  kibana:
#    image: kibana:8.11.3
#    container_name: kibana
#    ports:
#      - "5601:5601"
#    environment:
#      - ELASTICSEARCH_HOSTS=https://elasticsearch:9200
#      - ELASTICSEARCH_USERNAME=elastic
#      - ELASTICSEARCH_PASSWORD=admin123
#    depends_on:
#      - elasticsearch
#    networks:
#      - bbs-net
      
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: bbs
      RABBITMQ_DEFAULT_PASS: bbs-password
    volumes:
      - mq-plugins:/plugins
    networks:
      - bbs-net
      
volumes:
  mysql-data:
  redis-data:
  es-data:
  es-plugins:
  mq-plugins:

networks:
  bbs-net:
    name: bbs

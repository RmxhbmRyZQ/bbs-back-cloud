version: '3.9'
services:

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      TZ: Asia/Shanghai
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./mysql/conf:/etc/mysql/conf.d
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - bbs-net
      
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    command: ["redis-server", "/usr/local/etc/redis/redis.conf", "--requirepass", "admin123"]
    volumes:
      - redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      TZ: Asia/Shanghai
    networks:
      - bbs-net
      
  nacos:
    image: nacos/nacos-server:v2.3.2
    container_name: nacos
    env_file:
      - ./nacos/custom.env
    depends_on:
      - mysql
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    networks:
      - bbs-net

  sentinel:
    image: openjdk:17
    container_name: sentinel-dashboard
    volumes:
      - ./sentinel-dashboard.jar:/app/sentinel-dashboard.jar
    working_dir: /app
    command: >
      java
      -Dserver.port=8090
      -Dcsp.sentinel.dashboard.server=localhost:8090
      -Dsentinel.dashboard.metric.queryIntervalMs=300000
      -jar sentinel-dashboard.jar
    ports:
      - "8090:8090"
    networks:
      - bbs-net

  elasticsearch:
    image: elasticsearch:8.11.3
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - es-data:/usr/share/elasticsearch/data
      - ./es-plugins:/usr/share/elasticsearch/plugins
    networks:
      - bbs-net

  kibana:
    image: kibana:8.11.3
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - bbs-net
      
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: bbs
      RABBITMQ_DEFAULT_PASS: bbs-password
    volumes:
      - mq-plugins:/plugins
    networks:
      - bbs-net
# 安装延迟队列命令
# sudo cp mq-plugins/rabbitmq_delayed_message_exchange-3.12.0.ez /var/lib/docker/volumes/compose_mq-plugins/_data/
# sudo docker exec -it rabbitmq rabbitmq-plugins enable rabbitmq_delayed_message_exchange

volumes:
  mysql-data:
  redis-data:
  es-data:
  mq-plugins:

networks:
  bbs-net:
    name: bbs
